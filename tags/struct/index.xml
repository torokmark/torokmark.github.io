<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>struct on T[h]ink]er[ing</title>
    <link>https://torokmark.github.io/tags/struct/</link>
    <description>Recent content in struct on T[h]ink]er[ing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Oct 2019 12:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://torokmark.github.io/tags/struct/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ruby-like struct in Python #2</title>
      <link>https://torokmark.github.io/posts/python-struct-2/</link>
      <pubDate>Sat, 26 Oct 2019 12:00:00 +0100</pubDate>
      
      <guid>https://torokmark.github.io/posts/python-struct-2/</guid>
      <description>Ruby provides a very handy type called OpenStruct to create objects. It brings the opportunity to add fields to objects during the runtime. Here is its Python counterpart.
In the previous post I showed Struct from esu which helps creating new types with fields and methods. That has a sibling, called OpenStruct which helps creating objects on the fly.
Usage Ruby&amp;rsquo;s OpenStruct (doc:2.6.5) inspired it, and it looks as follows.</description>
    </item>
    
    <item>
      <title>Ruby-like struct in Python</title>
      <link>https://torokmark.github.io/posts/python-struct/</link>
      <pubDate>Sat, 19 Oct 2019 12:00:00 +0100</pubDate>
      
      <guid>https://torokmark.github.io/posts/python-struct/</guid>
      <description>Ruby provides a very flexible way to create new types with certain fields with Struct. Though Python does not have this functionality naturally, with esu package we can do the same.
Ruby types have rich API which is brought by the design, and the language features as well. Even though Python is very dynamic and flexible as well, some of the features are lacking in the languages.
In this post I would like to show you a Python package, name is esu, which brings a struct that can provide almost the same functionality.</description>
    </item>
    
  </channel>
</rss>