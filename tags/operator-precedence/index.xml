<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>operator precedence on T[h]ink]er[ing</title>
    <link>https://torokmark.github.io/tags/operator-precedence/</link>
    <description>Recent content in operator precedence on T[h]ink]er[ing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Aug 2019 12:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://torokmark.github.io/tags/operator-precedence/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ruby&#39;s or operator precedence</title>
      <link>https://torokmark.github.io/posts/rubys-or-operator-precedence/</link>
      <pubDate>Fri, 23 Aug 2019 12:00:00 +0100</pubDate>
      
      <guid>https://torokmark.github.io/posts/rubys-or-operator-precedence/</guid>
      <description>Operators have precedence and sometimes they can give us hard time to figure out why our code works as it does.
Ruby has three or operators, |, ||, and the readable or. All of them have different precedences. That is, the precedence, that makes some trouble if we do not care about which one we use.
The evaluation of logical operators are left-associative, that means the far left operator is evaluated at first, than its result will be the left operand of the next operator and so on.</description>
    </item>
    
  </channel>
</rss>